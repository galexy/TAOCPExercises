#+ATTR_HTML: :border 2 :rules all :frame border
#+HTML_MATHJAX: align: left indent: 5em tagside: left font: Neo-Euler


* Basic Concepts

** Algorithms

1. [/10/] The text showed how to interchange the values of variables $m$ and $n$,
   using the replacement notation, by setting $t \leftarrow m, m \leftarrow n, n
   \leftarrow t$. Show how the values of /four/ variables $(a, b, c, d)$ can be
   rearranged to $(b, c, d, a)$ by a sequence of replacements. In other words,
   the new value of $a$ is to be the original value of $b$, etc. Try to use the
   minimum number of replacements.

   *Answer*
   #+BEGIN_LATEX
   t \leftarrow a, a \leftarrow b, b \leftarrow c, c \leftarrow d, d \leftarrow t
   #+END_LATEX

2. [/15/] Prove that $m$ is always greater than $n$ at the beginning of step E1,
   except possibly the first time this step occurs.

   *Answer*

   At the end of step E3, $m$ is the original value of $n$ and $n$ is the
   remainder after step E2. Because the remainder must be less than the original
   value of $n$, $n$ is now less than $m$.

3. [/20/] Change Algorithm E (for the sake of efficiency) so that all trivial
   replacement operations such as "$m \leftarrow $n" are avoided. Write this new
   algorithm in the style of Algorithm E, and call if Algorithm F.

   *Answer*

   To eliminate the trivial assignments, we need to switch role of remainder and
   divisor between the variables $m$ and $n$ each time we compute a remainder.
   We can unfold the loop and not need to maintain a flag indicating which
   variable is the divisor.

   *Algorithm F*
   - F1 :: [Make sure m > n] If $m$ < $n$, $t \leftarrow m$, $m \leftarrow n$, $n \leftarrow t$
   - F2 :: [Find remainder] Divide $m$ by $n$ and let $m$ be the remainder.
   - F3 :: [Is m zero?] If $m = 0$, then the algorithm terminates, $n$ is the answer.
   - F4 :: [Find remainder] Divide $n$ by $m$ and let $n$ be the remainder.
   - F5 :: [Is n zero?] If $n = 0$, then the algorithm terminates, $m$ is the answer.
   - F6 :: [Go back] Go back to step F2.

4. [ /16/ ] What is the greatest common divisor of 2166 and 6099?

   *Answer*

   6099/2166, 2166/1767, 1767/399, 399/171, 171/57

   57

5. [/12/] Show that the "Procedure for Reading This Set of Books" that appears
   in the preface actually fails to be a genuine algorithm on three of our five
   counts! Also mention some differences in format between it and Algorithm E.

   *Answer*

   Finiteness - the algorithm procedure doesn't end
   Definiteness - steps are ambiguous
   Output - There may be no output
   Effectiveness

6. [/20/] What is $T_{5}$, the average number of times step E1 is performed when $n = 5$?

   If $m = 1$, E1 is executed 2 times
   If $m = 2$, E1 is executed 3 times
   If $m = 3$, E1 is executed 3 times
   If $m = 4$, E1 is executed 3 times
   If $m = 5$, E1 is executed 1 time

   (2 + 3 + 3 + 3 + 1) / 5 = 12/5

7. [/M21/] Suppose that $m$ is known and $n$ is allowed to range over all
   positive integers; let $U_{m}$ be the average number of times step E1 is
   execute in Algorithm E. Show that $U_{m}$ is well defined. Is $U_{m}$ in any
   way related to $T_{m}$?

   *Answer*

   There are an infinite number of cases where $n > m$, which overwhelms the
   average. Therefore, after the first execution of E1, we are looking at
   another version of $T_{m}$. So, the average is $1 + T_{m}$.


** Mathematical Preliminaries

*** Mathematical Induction

1. [/05/] Explain how to modify the idea of proof by mathematical induction, in
   case we want to prove some statement $P(n)$ for all /nonnegative/ integers -
   that is, for $n = 0, 1, 2, ...$ instead of for $n = 1, 2, 3, ...$.

   *Answer*

   1. Give a proof of $P(0)$ is true.
   2. Give a proof that if "if all of $P(0)$, $P(1)$, $P(2)$,...,$P(n)$ are
      true, then $P(n+1)$ is also true".

2. [/15/] There must be something wrong with the following proof. What is it?
   "*Theorem.* Let $a$ be any positive number. For all positive integers $n$ we
   have $a^{n-1} = 1$.

   /Proof./ If $n = 1, a^{n-1} = a^{1-1} = a^{0} = 1$. And
   by induction, assuming that the theorem is true for 1, 2, ..., $n$, we have

   \begin{align*}
     a^{(n+1)-1} 
   = a^{n} 
   = \dfrac{a^{n-1} \times a^{n-1}}{a^{(n-1)-1}} 
   = \dfrac{1 \times 1}{1}
   = 1;
   \end{align*}
   so theorem is true for $n+1$ as well.

   *Answer*

   The proof does not work for $n=1$. It would cause a division by zero and is
   undefined.

3. The follow proof by induction seems correct, but for some reason the equation
   for n = 6 gives $\dfrac{1}{2} + \dfrac{1}{6} + \dfrac{1}{12} +
   \dfrac{1}{20} + \dfrac{1}{30} = \dfrac{5}{6}$ on the left-hand side, and
   $\dfrac{3}{2} - \dfrac{1}{6} = \dfrac{4}{3}$ on the right-hand side. Can you
   find the mistake? "*Theorem*.

   \begin{align*}
     \dfrac{1}{1 \times 2}
   + \dfrac{1}{2 \times 3}
   + \cdots
   + \dfrac{1}{(n-1) \times n}
   = \dfrac{3}{2} - \dfrac{1}{n}.
   \end{align*}

   /Proof/. We use induction on n. For $n = 1$, clearly $3/2 - 1/n = 1/(1 \times
   2);$ and, assuming that the theorem is true for n,

   \begin{align*}
   & \dfrac{1}{1 \times 2}
   + \cdots
   + \dfrac{1}{(n-1) \times n}
   + \dfrac{1}{n \times (n + 1)} \\
   & = \dfrac{3}{2} - \dfrac{1}{n} + \dfrac{1}{n(n+1)}
   = \dfrac{3}{2} - \dfrac{1}{n} + (\dfrac{1}{n} - \dfrac{1}{n+1})
   = \dfrac{2}{2} - \dfrac{1}{n+1}.
   \end{align*}

   *Answer*

   $\dfrac{1}{(n-1) \times n}$ is not defined for $n = 1$.

4. Prove that, in addition to Eq. (3), Fibonacci numbers satisfy $F_{n} \geq
   \phi^{n-2}$.

   *Answer*

   \begin{align*}
     F_{n+1} = F_{n-1} + F_{n} \geq \phi^{n-3} + \phi^{n-2}
   = \phi^{n-3}(1 + \phi) = \phi^{n-3} \phi^2 = \phi^{n-1}
   \end{align*}

5. A /prime number/ is an integer > 1 that has no exact divisors other than 1
   and itself. Using this definition and mathematical induction, prove that
   every integer > 1 may be written a product of one or more prime numbers. (A
   prime number is considered to be the "product" of a single prime, namely
   itself.)

   *Answer*

   If $n$ is a prime, then the statement is true. If $n$ is not prime. It has
   some divisors, both of which are less than $n$. By, induction, those divisors
   can be written as a product of primes.

6. Prove that Eqs. (6) hold just before step E4, they hold afterwards also.

7. Formulate and prove by induction a rule for the sums $1^{2}$, $2^{2}-1^{2}$,
   $3^{2}-2^{2}+1^{2}$, $4^{2}-3^{2}+2^{2}-1^{2}$,
   $5^{2}-4^{2}+3^{2}-2^{2}+1^{2}$, etc.

*** Numbers, Powers and Logarithms

1. [00] What is the smallest positive rational number?

   *Answer*

   There is none.

2. [00] Is 1 + 0.239999999... a decimal expansion?

   Yes.

3. [02] What is $(-3)^{-3}$?

   *Answer*

   $\dfrac{1}{(-3)^{3}} = -\dfrac{1}{27}$

4. [05] what is $(0.125)^{-2/3}$?

   *Answer*

   $8^{2/3} = \sqrt[3]{64} = 4$

5. [05] We defined real numbers in terms of decimal expansion. Discuss how we
   could have defined them in terms of a binary expansion instead, and give a
   definition to replace Eq. (2).

   *Answer*

   $x = n + 0.b_{1}b_{2}b{3}\cdots$

   \begin{align*}
     n + \dfrac{b_{1}}{2} + \dfrac{b_{2}}{4} + \dfrac{b_{3}}{8} + \cdots + \dfrac{b_{k}}{2^{k}}
   \le x
   \lt n + \dfrac{b_{1}}{2} + \dfrac{b_{2}}{4} + \dfrac{b_{3}}{8} + \cdots + \dfrac{b_{k}}{2^{k}} + \dfrac{1}{2^{k+1}}
   \end{align*}

6. [10] Let $x = m + 0.d_{1}d_{2}\dots$ and $y = n + 0.e_{1}e_{2}\dots$ be real
   numbers. Give a rule for determining whether $x = y$, $x < y$, or $x > y$, based on
   decimal representation.

   *Answer*

   If $m > n$ then $x > y$ or if $m < n$ then $x < y$. Otherwise, if there
   exists a $k$ such that $d_{k} > e_{k}$ then $m > n$. Or, if there exists a
   $k$ such at $d_{k} < e_{k}$, then $m < n$, otherwise $m = n$.

7. [M23] Given that $x$ and $y$ are integers, prove the laws of exponents,
   starting from the definition given by Eq. (4).

   *Answer*

   Prove inductively on $y$. If $y = 1$, then $b^{x+1} = b^{x}b$. Assuming
   $b^{x+n} = b^{x}b^{n}$, then $b^{x+n+1} = b^{x+n}b = b^{x}b^{n}b = b^{x}b^{n+1}$

8. [25] Let $m$ be a positive integer. /Prove/ that every positive real number
   $u$ has a unique $m$th root, by giving a method to construct successively the
   values $n$, $d_1$, $d_2$, ... in the decimal expansion of the root.

9. [M23] GGive that $x$ and $y$ are rational, prove the laws of exponents under
   the assumption that the laws hold when $x$ and $y$ are integers.

10. [18] Prove that $log_{10}2$ is not a rational number.

    *Answer*

    $log_{10}2 = \dfrac{log_{2}2}{log_{2}10} = \dfrac{1}{log_{2}10}$

    The demonstrator is not an integer, therefore not a rational number.

11. [10] If $b = 10$ and $x \approx log_{10}2$, to how many decimal places of
    accuracy will we need to know the value of $x$ in order to determine the
    first three decimal places of the decimal expansion.


** MIX

*** Description of Mix

1. [00] If ~MIX~ were a ternary (base 3) computer, how many "trits" would there
   be per byte?

   *Answer*

   $\lceil \sqrt[3]{64} \rceil = 4$.

2. [02] If a value to be represented within ~MIX~ may get as large as 99999999,
   how many adjacent bytes should be used to contain this quantity?

   *Answer*

   Five bytes are required.

3. [02] Give the partial field specifications, ~(L:R)~, for the (a) address
   field, (b) index field, (c) field field, and (d) operation code field of a
   ~MIX~ instruction.

   *Answer*

   a. ~(0:2)~
   b. ~(3:3)~
   c. ~(4:4)~
   d. ~(5:5)~

4. [00] The last example of (5) is "~LDA -2000, 4~". How can this be legitimate,
   in view of the fact that memory addresses should not be negative?

   *Answer*

   ~r4~, which is the index register referred to in this instruction, has a value
   that is greater or equal to 2000.

5. [10] What symbolic notation, analogous to (4), corresponds to (6) if (6) is
   regarded as a ~MIX~ instruction?

   *Answer*

   #+BEGIN_SRC mixal
   DIV -80, 3
   #+END_SRC

6. [10] Assume that location 3000 contains

  |---+---+---+-----+----|
  | + | 5 | 1 | 200 | 15 |
  |---+---+---+-----+----|

  What is the result of the following instructions? (a) ~LDAN 3000~
  (b) ~LD2N 3000(3:4)~ (c) ~LDX 3000(1:3)~ (d) ~LD6 3000~ (e) LDXN 3000(0:0).

  *Answer*

  (a) rA is set to 
  |---+---+---+-----+----|
  | - | 5 | 1 | 200 | 15 |
  |---+---+---+-----+----|

  (b) r2 = -200

  (c) rX is set to
  |---+---+---+---+---+---|
  | + | 0 | 0 | 5 | 1 | ? |
  |---+---+---+---+---+---|

  (d) undefined

  (e) rX is set to
  |---+---+---+---+---+---|
  | - | 0 | 0 | 0 | 0 | 0 |
  |---+---+---+---+---+---|

7. [M15] Give a precise definition of the results of the ~DIV~ instruction for
   all cases in which overflow does not occur, using the algebraic operations 
   $X \bmod Y$ and $\lfloor X / Y \rfloor$.

8. [15] The last example of the ~DIV~ instruction that appears on page 133 has
   "rX before" equal to ~[+|1235|0|3|1]~. If this were ~[-|1234|0|3|1]~ instead,
   but other parts of that example were unchanged, what would registers A and X
   contain after the ~DIV~ instruction?

   *Answer*

   rA is set to ~[+|0|617|0|1].

9. [15] List all the =MIX= operators that can possibly affect the settings of
   the overflow toggle. (Do not include floating point operators.)

   *Answer*

   ~ADD~, ~SUB~, ~DIV~, ~INCA~, ~INCX~, ~DECA~, ~DECX~, ~JOV~, ~JNOV~, ~NUM~

10. [15] List all the =MIX= operators that can possibly affect the setting of
    the comparison indicator.

    *Answer*

    ~CMPA~, ~CMPX~, ~CMP1~, ~CMP2~, ~CMP3~, ~CMP4~, ~CMP5~, ~CMP6~

11. [15] List all the =MIX= operators that con possible affect the setting of
    rI1.

    *Answer*

    ~LD1~, ~LDN1~, ~ENT1~, ~ENN1~, ~INC1~, ~DEC1~, ~MOVE~

12. [10] Find a single instruction that has the effect of multiplying the
    current contents of rI3 by two and leaving the result in rI3.

    *Answer*

    The idea is to use the increment instruction targeting rI3 and using rI3 as
    the index field.

    #+BEGIN_SRC mixal
    INC3 0,3
    #+END_SRC

13. [10] Suppose location 1000 contains the instruction ~JOV 1001~. This
    instruction turns off the overflow toggle if it is on (and the next
    instruction executed will be in location 1001, in any case). If this
    instruction were changed to ~JNOV 1001~, would there be any difference? What
    if it were changed to ~JOV 1000~ or ~JNOV 1000~?

    *Answer*

    ~JNOV 1001~ would set rJ to 1000 if the overflow toggle was not on.
    ~JOV 1000~ has an extra jump if the overflow toggle was on. ~JNOV 1000~,
    would however, got into an infinite loop if the overflow toggle was on.

14. [20] For each =MIX= operation, consider whether there is a way to set the
    AA, I, and F portions so that the result of the instruction is precisely
    equivalent to ~NOP~ (except that the execution time may be longer). Assume
    that nothing is known about the contents of any registers or any memory
    locations. Whenever it is possible to produce a ~NOP~, state how it can be
    done.

15. [10] How many /alphanumeric characters/ are there in a typewriter or
    paper-tape block? in a card-reader or card-punch block? in a line-printer
    block?

    *Answer*

    There are 70 alphanumeric characters in a typewriter or paper-tape block.
    And, 80 in a card-reader or card-punch block, and 120 in a line-printer
    block.

16. [20] Write a program that sets memory cells 0000-0099 all to zero and is (a)
    as short a program as possible; (b) as fast as program as possible.

    #+BEGIN_SRC mixal
    STZ 0
    ENT1 1
    MOVE 0,(63)
    MOVE 0,(36)
    #+END_SRC

17. [26] This is the same as the previous exercise, except that locations 0000
    through $N$, inclusive, are to be set to zero, where $N$ is the current
    contents of rI2. Your programs (a) and (b) should work for any value $0 \leq
    N \leq 2999$; they should start in location 3000.

    *Answer*

    #+BEGIN_SRC mixal
    STZ 0
    JMP 3004
    MOVE 0,(63)
    DEC2 63
    J2NN 3003
    INC2 63
    STZ 0,2
    DEC2 1
    J2NN 3007
    #+END_SRC

18. [22] After the following "number one" program has been executed, what
    changes to registers, toggles, and memory have taken place?

    #+BEGIN_SRC mixal
    STZ  1           Memory location 1 = 0
    ENNX 1           rX  = ~|-|0|0|0|0|1|~
    STX  1(0:1)      Memory location 1 = -0
    SLAX 1           rX  = ~|-|0|0|0|1|0|~
    ENNA 1           rA  = ~|-|0|0|0|0|1|~
    INCX 1           rX  = ~|-|0|0|0|0|?|~
    ENT1 1           ri1 = ~|+|0|1|~
    SRC  1           rA  = ~|-|0|0|0|0|0|~    rX  = ~|-|1|0|0|0|0|~
    ADD  1           rA  = ~|+|0|0|0|0|1|~
    DEC1 -1          ri1 = ~|+|0|2|~
    STZ  1           Memory location 1 = 0
    CMPA 1           Comp. Indc. = GREATER
    MOVE -1,1(1)     ri1 = ~|+|0|3|~
    NUM  1           rA  = ~|+|110000|
    CHAR 1           rA  = ~|-|30|30|30|30|31|~    rX  = ~|-|31|30|30|30|30|~
    HLT  1
    #+END_SRC

    rA  = ~|-|30|30|30|30|31|~
    rX  = ~|-|31|30|30|30|30|~
    ri1 = ~|+|0|3|~
    Comp Indic. = GREATER
    CONTENTS(1) = 0

19. [14] What is the execution time of the program in the preceding exercise,
    not counting the ~HTL~ instruction?

    *Answer*

    (2 + 1 + 2 + 2 + 1 + 1 + 1 + 2 + 2 + 1 + 2 + 2 + 3, 10, + 10)u = 42u

20. [20] Write a program that sets all 4000 memory cells to a ~HLT~ instruction,
    and then stops.

    *Answer*

    #+BEGIN_SRC mixal
    ENT1 0
    MOVE 3999,0(1)
    MOVE 0,0(43)
    JMP  3997
    HLT  0
    #+END_SRC

21. [24] (a) Can the J-register ever be zero? (b) Write a program that, given a
    number $N$ in rI4, sets register J equal to N, assuming that $0 \lt N \leq
    3000$. Your program should start at location 3000. When your program has
    finished its execution, the contents of all memory cells must be unchanged.

    *Answer*

    #+BEGIN_SRC mixal
    ENT1 3000
    MOVE 0,4(1)
    ENTA 39
    STA  0,4
    ENTA 3010 #fix
    STA  0,4(1:2)
    JMP  0,4
    ENT1 0,4
    MOVE 3000,0(1)
    ENTA 49
    STA  3000,0
    ENTA 3000
    STA  3000,0(1:2)
    HLT
    #+END_SRC

*** The ~MIX~ Assembly Language
1. [00] The text remarked that "~X EQU 1000~" does not assemble any instructions
   that sets the value of a variable. Suppose that you are writing a ~MIX~
   program in which you wish to set the value contained in a certain memory cell
   (whose symbolic name is X) equal to 1000. How could you write this in ~MIXAL~?

   *Answer*

   #+BEGIN_SRC mixal
   ENTA 1000
   STA  X
   #+END_SRC

2. [10] Line 12 of Program M says "~JMP *~", where * denotes the location of
   that line. Why doesn't the program go into an infinite loop, endlessly
   repeating this instruction?

   *Answer*

   Because the address fields are overwrite with the J register on entry into
   the subroutine.

3. [23] What is the effect of the following program, if it is used in
   conjunction with Program M?

   #+BEGIN_SRC mixal
   START IN   X+1(0)
         JBUS *(0)
         ENT1 100
   1H    JMP  MAXIMUM
         LDX  X,1
         STA  X,1
         STX  X,2
         DEC1 1
         J1P  1B
         OUT  X+1(1)
         HLT
         END  START
   #+END_SRC

   *Answer*

   Reads 100 five byte numbers from tape unit 0 and writes the numbers in sorted
   order to tape unit 1.

4. [25] Assemble Program P by hand. (It won't take as long as you think.) What
   are the actual numerical contents of memory, corresponding to that symbolic
   program?

   *Answer*

   |   +AA | I |  F |  C |
   |-------+---+----+----|
   |  0000 | 0 | 18 | 35 |
   |  2051 | 0 |  0 |  9 |
   |  2050 | 0 |  0 | 10 |
   |  0001 | 0 |  0 | 49 |
   |  0499 | 1 |  0 | 26 |
   |  3016 | 0 |  1 | 41 |
   |  0002 | 0 |  0 | 50 |
   |  0002 | 0 |  2 | 51 |
   |  0000 | 0 |  2 | 48 |
   |  0000 | 2 |  2 | 55 |
   | -0001 | 3 |  5 | 12 |
   |  3006 | 0 |  1 | 47 |
   | -0001 | 3 |  5 | 56 |
   |  0001 | 0 |  0 | 51 |
   |  3008 | 0 |  6 | 39 |
   |  3003 | 0 |  0 | 39 |
   |  1995 | 0 | 18 | 37 |
   |  2035 | 0 |  2 | 52 |
   | -0050 | 0 |  2 | 53 |
   |  0501 | 0 |  0 | 53 |
   | -0001 | 5 |  5 |  8 |
   |  0000 | 0 |  1 |  5 |
   |  0000 | 4 | 12 | 31 |
   |  0001 | 0 |  1 | 52 |
   |  0050 | 0 |  1 | 53 |
   |  3020 | 0 |  2 | 45 |
   |  0000 | 4 | 18 | 37 |
   |  0024 | 4 |  5 | 12 |
   |  3019 | 0 |  0 | 45 |
   |  0000 | 0 |  2 |  5 |

5. [11] Why doesn't Program P need a JBUS instruction to determine when the line
   printer is ready?

   *Answer*

   Because it will block is the line printer is busy.

6. [HM20] (a) Show that if $n$ is not a prime, $n$ has a divisor $d$ with $1 \lt
   d \le \sqrt{n}$. (b) Use this fact to show that the test in step P7 of
   Algorithm P prove that ~N~ is prime.

7. [10] (a) What is the meaning of "~4B~" in line 34 of Program P? (B) What
   effect, if any, would be caused if the location of line 15 were changed to
   "~2H~" and the address of line 20 were changed to "~2B~"?

   *Answer*

   (a) It refers to the address of the instruction in line 29. (b) The program
   would not stop after finding the 500th prime.

8. [24] What does the following program do?

   #+BEGIN_SRC mixal
   * MYSTERY PROGRAM
   BUF ORIG *+3000
   1H  ENT1 1               rI1 = 1
       ENT2 0               rI2 = 0
       LDX  4F              rX  = |+|01|01|01|01|01|
   2H  ENT3 0,1             rI3 = 1
   3H  STZ  BUF,2           CONTENTS(3000) = |+|01|01|01|01|01|
       INC2 1               rI2 = 1
       DEC3 1               rI3 = 0
       J3P  3B              Nothing
       STX  BUF,2           CONTENTS(3001) = |+|01|01|01|01|01|
       INC2 1               rI2 = 1
       INC1 1               rI1 = 1
       CMP1 =75=            Comp Indic. = GREATER
       JL   2B              Nothing
       ENN2 2400            rI2 = -2400
       OUT  BUF+2400,2(18)  
       INC2 24
       J2N  *-2
       HLT
   4H  ALF  AAAAA
       END  1B
   #+END_SRC
